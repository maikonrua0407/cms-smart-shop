//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartShop.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SmartShopEntities : DbContext
    {
        public SmartShopEntities()
            : base("name=SmartShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Advertisement> Advertisements { get; set; }
        public DbSet<Album> Albums { get; set; }
        public DbSet<Artical> Articals { get; set; }
        public DbSet<ArticalCategory> ArticalCategories { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<Color> Colors { get; set; }
        public DbSet<Comment> Comments { get; set; }
        public DbSet<HT_THONG_TIN> HT_THONG_TIN { get; set; }
        public DbSet<Image> Images { get; set; }
        public DbSet<Inventory> Inventories { get; set; }
        public DbSet<InventoryDetail> InventoryDetails { get; set; }
        public DbSet<InventoryPeriod> InventoryPeriods { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<MemberGroup> MemberGroups { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductDesign> ProductDesigns { get; set; }
        public DbSet<ProductMaterial> ProductMaterials { get; set; }
        public DbSet<ProductSet> ProductSets { get; set; }
        public DbSet<ProductSize> ProductSizes { get; set; }
        public DbSet<ProductStyle> ProductStyles { get; set; }
        public DbSet<ProductType> ProductTypes { get; set; }
        public DbSet<Provider> Providers { get; set; }
        public DbSet<ShoppingOrder> ShoppingOrders { get; set; }
        public DbSet<ShoppingOrderDetail> ShoppingOrderDetails { get; set; }
        public DbSet<SP_SAN_PHAM_TTINH> SP_SAN_PHAM_TTINH { get; set; }
        public DbSet<SP_TTINH_GTRI> SP_TTINH_GTRI { get; set; }
        public DbSet<SP_TTINH_LOAI> SP_TTINH_LOAI { get; set; }
        public DbSet<StockOrder> StockOrders { get; set; }
        public DbSet<StockOrderDetail> StockOrderDetails { get; set; }
        public DbSet<SYS_MENU> SYS_MENU { get; set; }
        public DbSet<SYS_VERSION> SYS_VERSION { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<WebInfo> WebInfoes { get; set; }
        public DbSet<vwAdv_Category> vwAdv_Category { get; set; }
        public DbSet<vwArtical> vwArticals { get; set; }
        public DbSet<vwComment> vwComments { get; set; }
        public DbSet<vwProduct> vwProducts { get; set; }
        public DbSet<vwProduct_Img> vwProduct_Img { get; set; }
        public DbSet<vwProductSet_Product> vwProductSet_Product { get; set; }
        public DbSet<vwProductSetAllName> vwProductSetAllNames { get; set; }
        public DbSet<vwShoppingOrder_Member> vwShoppingOrder_Member { get; set; }
        public DbSet<vwShoppingOrderDetail> vwShoppingOrderDetails { get; set; }
        public DbSet<ProductGroup> ProductGroups { get; set; }
    
        [EdmFunction("SmartShopEntities", "T_AccessMember_UserName")]
        public virtual IQueryable<T_AccessMember_UserName_Result> T_AccessMember_UserName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<T_AccessMember_UserName_Result>("[SmartShopEntities].[T_AccessMember_UserName](@username)", usernameParameter);
        }
    
        [EdmFunction("SmartShopEntities", "T_AccessMemberby_UserName")]
        public virtual IQueryable<T_AccessMemberby_UserName_Result> T_AccessMemberby_UserName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<T_AccessMemberby_UserName_Result>("[SmartShopEntities].[T_AccessMemberby_UserName](@username)", usernameParameter);
        }
    
        public virtual ObjectResult<Comment> P_Comment_SearchPaging(Nullable<int> productSetID, Nullable<int> type, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var productSetIDParameter = productSetID.HasValue ?
                new ObjectParameter("ProductSetID", productSetID) :
                new ObjectParameter("ProductSetID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Comment>("P_Comment_SearchPaging", productSetIDParameter, typeParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<Comment> P_Comment_SearchPaging(Nullable<int> productSetID, Nullable<int> type, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var productSetIDParameter = productSetID.HasValue ?
                new ObjectParameter("ProductSetID", productSetID) :
                new ObjectParameter("ProductSetID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Comment>("P_Comment_SearchPaging", mergeOption, productSetIDParameter, typeParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual int P_Member_SearchPaging(string usernam, string keyword, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var usernamParameter = usernam != null ?
                new ObjectParameter("usernam", usernam) :
                new ObjectParameter("usernam", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_Member_SearchPaging", usernamParameter, keywordParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<Member> P_Member_UserName_MemberGroupID_SearchPaging(string username, Nullable<int> memberGroupID, string keyword, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var memberGroupIDParameter = memberGroupID.HasValue ?
                new ObjectParameter("MemberGroupID", memberGroupID) :
                new ObjectParameter("MemberGroupID", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member>("P_Member_UserName_MemberGroupID_SearchPaging", usernameParameter, memberGroupIDParameter, keywordParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<Member> P_Member_UserName_MemberGroupID_SearchPaging(string username, Nullable<int> memberGroupID, string keyword, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var memberGroupIDParameter = memberGroupID.HasValue ?
                new ObjectParameter("MemberGroupID", memberGroupID) :
                new ObjectParameter("MemberGroupID", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member>("P_Member_UserName_MemberGroupID_SearchPaging", mergeOption, usernameParameter, memberGroupIDParameter, keywordParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwArtical> P_vwArtical_SearchPaging(string keyword, Nullable<int> articalCatID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var articalCatIDParameter = articalCatID.HasValue ?
                new ObjectParameter("ArticalCatID", articalCatID) :
                new ObjectParameter("ArticalCatID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwArtical>("P_vwArtical_SearchPaging", keywordParameter, articalCatIDParameter, fromDateParameter, toDateParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwArtical> P_vwArtical_SearchPaging(string keyword, Nullable<int> articalCatID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var articalCatIDParameter = articalCatID.HasValue ?
                new ObjectParameter("ArticalCatID", articalCatID) :
                new ObjectParameter("ArticalCatID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwArtical>("P_vwArtical_SearchPaging", mergeOption, keywordParameter, articalCatIDParameter, fromDateParameter, toDateParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwComment> P_vwComment_SearchPaging(string keyword, Nullable<int> type, Nullable<int> adminView, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var adminViewParameter = adminView.HasValue ?
                new ObjectParameter("AdminView", adminView) :
                new ObjectParameter("AdminView", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwComment>("P_vwComment_SearchPaging", keywordParameter, typeParameter, adminViewParameter, fromDateParameter, toDateParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwComment> P_vwComment_SearchPaging(string keyword, Nullable<int> type, Nullable<int> adminView, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var adminViewParameter = adminView.HasValue ?
                new ObjectParameter("AdminView", adminView) :
                new ObjectParameter("AdminView", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwComment>("P_vwComment_SearchPaging", mergeOption, keywordParameter, typeParameter, adminViewParameter, fromDateParameter, toDateParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProduct> P_vwProduct_SearchPaging(string keyword, Nullable<int> productGroupID, Nullable<int> productSetID, Nullable<int> sizeID, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productSetIDParameter = productSetID.HasValue ?
                new ObjectParameter("ProductSetID", productSetID) :
                new ObjectParameter("ProductSetID", typeof(int));
    
            var sizeIDParameter = sizeID.HasValue ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProduct>("P_vwProduct_SearchPaging", keywordParameter, productGroupIDParameter, productSetIDParameter, sizeIDParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProduct> P_vwProduct_SearchPaging(string keyword, Nullable<int> productGroupID, Nullable<int> productSetID, Nullable<int> sizeID, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productSetIDParameter = productSetID.HasValue ?
                new ObjectParameter("ProductSetID", productSetID) :
                new ObjectParameter("ProductSetID", typeof(int));
    
            var sizeIDParameter = sizeID.HasValue ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProduct>("P_vwProduct_SearchPaging", mergeOption, keywordParameter, productGroupIDParameter, productSetIDParameter, sizeIDParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort", keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort", mergeOption, keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_NotPaging(string keyword, Nullable<int> productGroupID, Nullable<int> providerID, Nullable<int> shortBy)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_NotPaging", keywordParameter, productGroupIDParameter, providerIDParameter, shortByParameter);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_NotPaging(string keyword, Nullable<int> productGroupID, Nullable<int> providerID, Nullable<int> shortBy, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_NotPaging", mergeOption, keywordParameter, productGroupIDParameter, providerIDParameter, shortByParameter);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_PriceBeetwen(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_PriceBeetwen", keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_PriceBeetwen(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_PriceBeetwen", mergeOption, keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_PriceDown(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_PriceDown", keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_PriceDown(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_PriceDown", mergeOption, keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_PriceUp(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_PriceUp", keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSet_FindSort_PriceUp(string keyword, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> productDesignID, Nullable<int> providerID, Nullable<double> priceFrom, Nullable<double> priceTo, Nullable<int> shortBy, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productDesignIDParameter = productDesignID.HasValue ?
                new ObjectParameter("ProductDesignID", productDesignID) :
                new ObjectParameter("ProductDesignID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var priceFromParameter = priceFrom.HasValue ?
                new ObjectParameter("PriceFrom", priceFrom) :
                new ObjectParameter("PriceFrom", typeof(double));
    
            var priceToParameter = priceTo.HasValue ?
                new ObjectParameter("PriceTo", priceTo) :
                new ObjectParameter("PriceTo", typeof(double));
    
            var shortByParameter = shortBy.HasValue ?
                new ObjectParameter("ShortBy", shortBy) :
                new ObjectParameter("ShortBy", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSet_FindSort_PriceUp", mergeOption, keywordParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, productDesignIDParameter, providerIDParameter, priceFromParameter, priceToParameter, shortByParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSetAllName_SearchPaging(string keyword, Nullable<int> categoryID, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> pocket, Nullable<int> providerID, Nullable<int> forGender, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var pocketParameter = pocket.HasValue ?
                new ObjectParameter("Pocket", pocket) :
                new ObjectParameter("Pocket", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var forGenderParameter = forGender.HasValue ?
                new ObjectParameter("ForGender", forGender) :
                new ObjectParameter("ForGender", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSetAllName_SearchPaging", keywordParameter, categoryIDParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, pocketParameter, providerIDParameter, forGenderParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwProductSetAllName> P_vwProductSetAllName_SearchPaging(string keyword, Nullable<int> categoryID, Nullable<int> productGroupID, Nullable<int> productStyleID, Nullable<int> productMaterialID, Nullable<int> productTypeID, Nullable<int> pocket, Nullable<int> providerID, Nullable<int> forGender, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productStyleIDParameter = productStyleID.HasValue ?
                new ObjectParameter("ProductStyleID", productStyleID) :
                new ObjectParameter("ProductStyleID", typeof(int));
    
            var productMaterialIDParameter = productMaterialID.HasValue ?
                new ObjectParameter("ProductMaterialID", productMaterialID) :
                new ObjectParameter("ProductMaterialID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var pocketParameter = pocket.HasValue ?
                new ObjectParameter("Pocket", pocket) :
                new ObjectParameter("Pocket", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var forGenderParameter = forGender.HasValue ?
                new ObjectParameter("ForGender", forGender) :
                new ObjectParameter("ForGender", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwProductSetAllName>("P_vwProductSetAllName_SearchPaging", mergeOption, keywordParameter, categoryIDParameter, productGroupIDParameter, productStyleIDParameter, productMaterialIDParameter, productTypeIDParameter, pocketParameter, providerIDParameter, forGenderParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwShoppingOrder_Member> P_vwShoppingOrder_Member_SearchPaging(string username, Nullable<int> memberID, string keyword, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<System.DateTime> orderInDate, Nullable<int> status, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var orderInDateParameter = orderInDate.HasValue ?
                new ObjectParameter("OrderInDate", orderInDate) :
                new ObjectParameter("OrderInDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwShoppingOrder_Member>("P_vwShoppingOrder_Member_SearchPaging", usernameParameter, memberIDParameter, keywordParameter, fromDateParameter, toDateParameter, orderInDateParameter, statusParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwShoppingOrder_Member> P_vwShoppingOrder_Member_SearchPaging(string username, Nullable<int> memberID, string keyword, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<System.DateTime> orderInDate, Nullable<int> status, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var orderInDateParameter = orderInDate.HasValue ?
                new ObjectParameter("OrderInDate", orderInDate) :
                new ObjectParameter("OrderInDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwShoppingOrder_Member>("P_vwShoppingOrder_Member_SearchPaging", mergeOption, usernameParameter, memberIDParameter, keywordParameter, fromDateParameter, toDateParameter, orderInDateParameter, statusParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwShoppingOrder_Member> P_vwShoppingOrder_User_SearchPaging(string username, Nullable<int> status, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwShoppingOrder_Member>("P_vwShoppingOrder_User_SearchPaging", usernameParameter, statusParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<vwShoppingOrder_Member> P_vwShoppingOrder_User_SearchPaging(string username, Nullable<int> status, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwShoppingOrder_Member>("P_vwShoppingOrder_User_SearchPaging", mergeOption, usernameParameter, statusParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_Select_SanPham(string iD, string groupId, string orderField, string orderType, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var groupIdParameter = groupId != null ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(string));
    
            var orderFieldParameter = orderField != null ?
                new ObjectParameter("orderField", orderField) :
                new ObjectParameter("orderField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("orderType", orderType) :
                new ObjectParameter("orderType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Select_SanPham", iDParameter, groupIdParameter, orderFieldParameter, orderTypeParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual int sp_TimKiem_SanPham(string keyWord, string groupId, string orderField, string orderType, Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            var groupIdParameter = groupId != null ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(string));
    
            var orderFieldParameter = orderField != null ?
                new ObjectParameter("orderField", orderField) :
                new ObjectParameter("orderField", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("orderType", orderType) :
                new ObjectParameter("orderType", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TimKiem_SanPham", keyWordParameter, groupIdParameter, orderFieldParameter, orderTypeParameter, pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<sp_TTINH_SPHAM_Result> sp_TTINH_SPHAM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TTINH_SPHAM_Result>("sp_TTINH_SPHAM");
        }
    
        public virtual ObjectResult<string> sp_TTINH_SPHAM_THUONGHIEU(Nullable<int> catID)
        {
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_TTINH_SPHAM_THUONGHIEU", catIDParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spCategory_Paging_Result> spCategory_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCategory_Paging_Result>("spCategory_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spCategory_Search_Paging_Result> spCategory_Search_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCategory_Search_Paging_Result>("spCategory_Search_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spColor_Paging_Result> spColor_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spColor_Paging_Result>("spColor_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spProductDesign_Paging_Result> spProductDesign_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductDesign_Paging_Result>("spProductDesign_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spProductGroup_Paging_Result> spProductGroup_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductGroup_Paging_Result>("spProductGroup_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spProductMaterial_Paging_Result> spProductMaterial_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductMaterial_Paging_Result>("spProductMaterial_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spProductSize_Paging_Result> spProductSize_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductSize_Paging_Result>("spProductSize_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spProductStyle_Paging_Result> spProductStyle_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductStyle_Paging_Result>("spProductStyle_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spProductType_Paging_Result> spProductType_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductType_Paging_Result>("spProductType_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    
        public virtual ObjectResult<spProvider_Paging_Result> spProvider_Paging(Nullable<int> pageSize, Nullable<int> currentPage, ObjectParameter totalRecord)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProvider_Paging_Result>("spProvider_Paging", pageSizeParameter, currentPageParameter, totalRecord);
        }
    }
}
